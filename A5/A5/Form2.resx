<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExit.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAAxZJREFUOE+NVEtIlFEU/tPMRdAiUAJdC2m0S5CgjZGioC3StYuIiBZGujRQSXAj
        mKCoILlpJ9rE+GjGRzbj/5oZnYc2zuQ8nNFJN44z7r/O+W2u8+ckLT7uvefe893zls7OzpDJZJDNrdks
        MoRfR0cI//wJv9+Pzc1NeDwe+Hw+7O7uIpVK4fT0FIV0JZOA1iMiYkVNUaB9+gT1/Xso3d1Q3r6F2tcH
        7eNHaE4ntra2kDw4MOmyIVK+IBqNQtc0aOPjkNvasPHkSUHIT59CGxqCTp+Gw2HhlcnCCJFpGxuQOzsL
        khSC+uIF9PV1hPJIJd5wvNgy5c2bgopXQX3+HC6ydD+RuLDQ6/VCGxsrqPA/0CnObrcbaUqUxBnTZRnK
        s2emR4HBQSQos55Xr4RMaWlBZHERsZUVKK2tQi43NUFfXUU8HocUCoWgTk+LSwONjfh1eIij42OkYjG4
        KVZMEHc4DBkjMDBg0tGGhxEIBCCxu0pvr+mS8WNkRCgf7u1hn2KcO8cpefkWMlRKpsvlgsS+/yuzwclJ
        QSLIKKvsuvHm8WM46+uNvdrRAY0+lZjVSS7lE+WgUi2mIhFBxvF2NDRgoawMX0pL8VmSDFiuX4e9tvac
        kF22k6L11i3Yq6rw7cEDfH/40CjefWq5QyLhjuCyYITJwvnyckGWw2JdHXRdhxQMBrHe32+6nL9zB2FK
        QI7ET657P3wQ59DyMqy3b5t0VshLblnpgLKprq3hy82b4tLR3i6UvaOjhksM38SEkLt6ei4Ii4ogz8wY
        rStxMfI0WXn5UjywlJTAQ2XhevcOluLiC/mNG/BPTSFCg8FWUyPktuZmw92TkxMY4yuZTBp9vHD/vnh0
        Ja5dE3trRQVUux1RqlfTcOCpodhsWLh3z6x8BayVlZBnZ7G9vW0MBvP4ogOTqpSMZaopS15ZXAKFwUaF
        rVJydnZ2jGF7aXzlBAkKOE9nZWkJa11d+EqFu1Bdjfm7d7H06BFWX7+GPDdndEXsj5s53XML/xLwyj9y
        JtkV7iQuWAaTcL/GaAik0+lLZNlsFr8BvG98mVcPMBMAAAAASUVORK5CYII=
</value>
  </data>
</root>